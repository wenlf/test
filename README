This a test for github first use.

1、再新增public ssh key时，可以使用已有的邮箱地址为其它（wenlf..@hose)的id_rsa.pub来新增，
    不会影响git ssh的下载，及git history的显示

    a) git 上显示登陆用户wenlf
    b) idea local显示操作系统当前用户名Lfwen


2. 生成ssh key步骤

    a) cd ~/.ssh ， 来查看是否已经生成id_rsa, 及id_rsa.pub

    b) 生成
        1) ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
                // This creates a new ssh key, using the provided email as a label.

        2)  设置文件存储路径，可以默认
            > Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]

        3)  设置ssh密码，可以为空
            > Enter passphrase (empty for no passphrase): [Type a passphrase]
            > Enter same passphrase again: [Type passphrase again]

    c) 可选，将ssh key与ssh-agent关联
            > ssh-add -K ~/.ssh/id_rsa

    相关链接地址：https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

3. 生成gpg key步骤

    a) 检查gpg key是否已经生成，如果没有，则输出为空
        > gpg --list-secret-keys --keyid-format LONG

    b) 生成gpg key
        > gpg --full-generate-key
        选择算法类型 -> 秘钥长度（建议4096) -> 密码有效期
            -> 真实姓名、电子邮件、注释
            -> 最后确认即可。

    c) 查看生成的key值（在sec一行，rsa/4096后面，长度16位的十六进制值），并根据该key，获得 public key block
        > gpg --list-secret-keys --keyid-format LONG
        > gpg --armor --export BE2C****9DA6

    d) 将该public key block 复制粘贴到github gpg key设置中；

    e) 将该gpg key与git关联：进入git 目录，执行(目录范围的话，不需要--global):
        > git config [--global] user.signingkey BE2C****9DA6

    e2)  > git config user.email "515302125@qq.com"

    f)  使用该gpg key来关联commit提交（注意gpg key的email、git的user.email必须一致，同时为github的主email/commit email/no-reply email三者的其中一个）；
                                                                                primary email / commit email / Default notification email
        > git commit -S -m your commit message
        > git push

    f2) 使用gpg key来签名及验证tag

        > git tag -s mytag      // 签名
            # Creates a signed tag

        > $ git tag -v mytag    // 验证
            # Verifies the signed tag



commands:

> gpg --version
  gpg (GnuPG) 2.2.19
  libgcrypt 1.8.5
  Copyright (C) 2019 Free Software Foundation, Inc.
  License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
  This is free software: you are free to change and redistribute it.
  There is NO WARRANTY, to the extent permitted by law.

  Home: /Users/lfwen/.gnupg
  支持的算法：
  公钥： RSA, ELG, DSA, ECDH, ECDSA, EDDSA
  密文： IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,
      CAMELLIA128, CAMELLIA192, CAMELLIA256
  散列： SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224
  压缩：  不压缩, ZIP, ZLIB, BZIP2

> gpg --full-generate-key
  gpg (GnuPG) 2.2.19; Copyright (C) 2019 Free Software Foundation, Inc.
  This is free software: you are free to change and redistribute it.
  There is NO WARRANTY, to the extent permitted by law.

  请选择您要使用的密钥类型：
     (1) RSA 和 RSA （默认）
     (2) DSA 和 Elgamal
     (3) DSA（仅用于签名）
     (4) RSA（仅用于签名）
    (14) Existing key from card
  您的选择是？
  RSA 密钥的长度应在 1024 位与 4096 位之间。
  您想要使用的密钥长度？(2048) 4096
  请求的密钥长度是 4096 位
  请设定这个密钥的有效期限。
           0 = 密钥永不过期
        <n>  = 密钥在 n 天后过期
        <n>w = 密钥在 n 周后过期
        <n>m = 密钥在 n 月后过期
        <n>y = 密钥在 n 年后过期
  密钥的有效期限是？(0)
  密钥永远不会过期
  这些内容正确吗？ (y/N) y

  GnuPG 需要构建用户标识以辨认您的密钥。

  真实姓名： wenlongfei
  电子邮件地址： 515302125@qq.com
  注释： Lfwen
  您选定了此用户标识：
      “wenlongfei (Lfwen) <515302125@qq.com>”

  更改姓名（N）、注释（C）、电子邮件地址（E）或确定（O）/退出（Q）？ O
  我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘
  、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数
  发生器有更好的机会获得足够的熵。
  我们需要生成大量的随机字节。在质数生成期间做些其他操作（敲打键盘
  、移动鼠标、读写硬盘之类的）将会是一个不错的主意；这会让随机数
  发生器有更好的机会获得足够的熵。
  gpg: 密钥 BE2C********9DA6 被标记为绝对信任
  gpg: 目录‘/Users/lfwen/.gnupg/openpgp-revocs.d’已创建
  gpg: 吊销证书已被存储为‘/Users/lfwen/.gnupg/openpgp-revocs.d/2E185129FE89BE1830BA1852BE2C********9DA6.rev’
  公钥和私钥已经生成并被签名。

  pub   rsa4096 2020-08-25 [SC]
        2E185129FE89BE1830BA1852BE2C********9DA6
  uid                      wenlongfei (Lfwen) <515302125@qq.com>
  sub   rsa4096 2020-08-25 [E]

> gpg --list-secret-keys --keyid-format LONG
      gpg: 正在检查信任度数据库
      gpg: marginals needed: 3  completes needed: 1  trust model: pgp
      gpg: 深度：0  有效性：  1  已签名：  0  信任度：0-，0q，0n，0m，0f，1u
      /Users/lfwen/.gnupg/pubring.kbx
      -------------------------------
      sec   rsa4096/BE2CB01EE0FB9DA6 2020-08-25 [SC]
            2E185129FE89BE1830BA1852BE2CB01EE0FB9DA6
      uid                 [ 绝对 ] wenlongfei (Lfwen) <515302125@qq.com>
      ssb   rsa4096/0F709CBF2744943B 2020-08-25 [E]

> gpg --armor --export BE2C****9DA6
  -----BEGIN PGP PUBLIC KEY BLOCK-----

  mQINBF9EfrwBEADc0vW3XYIDGeceA0abwNuewk/AnOfYSSsX99Y1+Ch2C1yy5fkr
  5tZtlFeylYRmadA8hD9ljeOgZ8SZya6K3agq5HG/qNItJ8G4FVhY4DXG/orIM9H2
  ***
  Vvz46qR6/USP8O6k57ATO994iufkELf0DxhTt+xKSCBJqXudjpu2Pbz0boa7K+qy
  aA==
  =pNPk
  -----END PGP PUBLIC KEY BLOCK-----

> gpg --edit-key BE2CB01EE0FB9DA6       // 修改gpg key绑定的邮箱
    gpg> adduid                         // 新增gpg key绑定的用户 （一个key可以绑定多个用户）

    ##########################################################

    (base) localhost:mall-taxi lfwen$ gpg --list-secret-keys --keyid-format LONG
    gpg: 正在检查信任度数据库
    gpg: marginals needed: 3  completes needed: 1  trust model: pgp
    gpg: 深度：0  有效性：  2  已签名：  0  信任度：0-，0q，0n，0m，0f，2u
    /Users/lfwen/.gnupg/pubring.kbx
    -------------------------------
    sec   rsa4096/BE2CB01EE0FB9DA6 2020-08-25 [SC]
          2E185129FE89BE1830BA1852BE2CB01EE0FB9DA6
    uid                 [ 绝对 ] wenlongfei (Lfwen) <515302125@qq.com>
    ssb   rsa4096/0F709CBF2744943B 2020-08-25 [E]

    sec   rsa4096/C205FE816CCCA656 2020-08-25 [SC]
          557542B68122CD392FF7F0CFC205FE816CCCA656
    uid                 [ 绝对 ] wenlongfei (Lfwen) <wenlongfei@hosecloud.com>                // 第一个uid
    uid                 [ 绝对 ] \xe6\xe9\xbe\xe9\xa3\x20(Lfwen) <wenlongfei@hosecloud.com>   // 第二个uidpwd
    ssb   rsa4096/4B14DD7DA84EC168 2020-08-25 [E]

    ##########################################################

> git config user.signingkey BE2C********9DA6

> git config user.email "515302125@qq.com"

> git config --list
